{"is_source_file": true, "format": "JavaScript (Node.js, Express)", "description": "This source file defines routing handlers for managing game rooms in a multiplayer online Ludo game, including listing, creating, joining, and leaving rooms through REST API endpoints.", "external_files": ["../middlewares/auth.js", "../middlewares/validate.js", "../models/Room.js", "http-status-codes"], "external_methods": ["authenticate", "validate", "Room.find", "Room.findById", "Room.create", "room.save", "room.deleteOne", "bcrypt.hash", "bcrypt.compare"], "published": ["router"], "classes": [{"name": "Room", "description": "Room model representing game rooms, including properties like name, privacy, password, host user, players, and game status."}], "methods": [{"name": "GET /api/rooms", "description": "Retrieves a list of available rooms, optionally filtered by status."}, {"name": "POST /api/rooms", "description": "Creates a new game room with specified properties, such as name, privacy, password, and maximum players."}, {"name": "POST /api/rooms/:roomId/join", "description": "Allows a user to join an existing game room if it is not full or started, handling private room password verification."}, {"name": "POST /api/rooms/:roomId/leave", "description": "Allows a user to leave a room; deletes the room if it becomes empty."}], "calls": ["Room.find", "Room.findById", "Room.create", "room.save", "room.deleteOne", "bcrypt.hash", "bcrypt.compare"], "search-terms": ["room routes", "game room management", "multiplayer ludo backend", "room join leave", "room creation API"], "state": 2, "file_id": 13, "knowledge_revision": 27, "git_revision": "", "ctags": [], "hash": "6b8cd10814341061cc2cbc32be5ea283", "format-version": 4, "code-base-name": "BackendAPI&Real_TimeEngine", "filename": "BackendAPI&Real_TimeEngine/src/routes/room.routes.js", "revision_history": [{"27": ""}]}